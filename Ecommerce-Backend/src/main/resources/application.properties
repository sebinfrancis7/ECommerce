#cors
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET, POST, DELETE


#db
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=admin
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/ecommerce

#hibernate
#quarkus.hibernate-orm.log.sql=true
#quarkus.hibernate-orm.database.generation=drop-and-create


#flyway
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.out-of-order=true
quarkus.flyway.locations=db/migrations

#kakfa
kafka.bootstrap.servers=localhost:29092

#outgoing
mp.messaging.outgoing.products-output.connector=smallrye-kafka
mp.messaging.outgoing.products-output.topic=topic-example
#mp.messaging.outgoing.products.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
#mp.messaging.outgoing.products-output.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.products-output.merge=true
#incoming
mp.messaging.incoming.products-input.connector=smallrye-kafka
mp.messaging.incoming.products-input.topic=topic-example
#mp.messaging.incoming.products.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
#mp.messaging.incoming.products.value.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.incoming.products-input.value.deserializer=org.ecommerce.logic.kafka.ProductDeserializer
mp.messaging.incoming.products-input.broadcast=true